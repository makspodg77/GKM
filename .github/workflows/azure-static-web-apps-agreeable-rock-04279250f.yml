name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Prepare deployment package
        run: |
          # Create a deployment directory
          mkdir -p deployment

          # Copy the frontend build to the root of deployment
          cp -r frontend/dist/* deployment/

          # Create an api folder for the backend
          mkdir -p deployment/api
          cp -r backend/* deployment/api/

          # Create a staticwebapp.config.json file
          echo '{
            "navigationFallback": {
              "rewrite": "/index.html",
              "exclude": ["/images/*", "/css/*", "/js/*", "/api/*"]
            },
            "routes": [
              {
                "route": "/api/*",
                "methods": ["GET", "POST", "PUT", "DELETE"],
                "rewrite": "/api/index.js"
              }
            ]
          }' > deployment/staticwebapp.config.json

          # Ensure web.config is in the root if it exists
          cp frontend/web.config deployment/ || true

          # Debug: List deployment directory contents
          ls -la deployment
          ls -la deployment/api || true

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_ROCK_04279250F }}
          action: "upload"
          app_location: "deployment"
          api_location: "api"
          output_location: ""
          skip_app_build: true
          skip_api_build: true
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_ROCK_04279250F }}
          action: "close"
